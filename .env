#
# Store your bot settings in the variables below
# or via environment variables of the same name
# 
#   DO NOT PUT SECRETS IN THIS FILE IF YOU'RE PUSHING THE CODE TO EXTERNAL REPOS
#
# - you can reference these variables from your code with process.env.SECRET for example
#
# - note that ".env" is formatted like a shell file, so you may (depending on your platform) need to add double quotes if strings contains spaces
#

# Webex Teams bot account access token

WEBEX_ACCESS_TOKEN=MzJkZTE2ZjgtMTFhMi00ZTgwLTllNjYtZjA4MDY5ODVjZDE5MzM5NzBjYzktMzVm_P0A1_84aae151-29a2-477e-a9d8-5c7571f8b94e

# Internet facing URL where your bot can be reached for incoming webhooks or
# HTTP web server requests.  
# Can be empty if WEBSOCKET_EVENTS is True and the Botkit web server is 
# not needed, e.g. if not serving images related to the buttons & cards feature
# or the health check URL

PUBLIC_URL=https://aa68-60-52-28-226.ngrok.io

# Use websockets instead of webhooks for incoming Webex events (True/False)

WEBSOCKET_EVENTS=False

# Local port where your bot will be started
# defaults to 3000

PORT=3000

# Webex JavaScript SDK debug level
# Values: error, warn, info, debug, trace

WEBEX_LOG_LEVEL=error

# Storage options - enable only one option (default is in-memory only)

# Redis storage URL - enable to use Redis for Botkit conversation persistence/scalability

REDIS_URL=

# MongoDB storage URL - enable to use MongoDB for Botkit conversation persistence/scalability

MONGO_URI=

# Botkit CMS credentials

CMS_URI=
CMS_TOKEN=

# Node environment setting
# defaults to development

NODE_ENV=development

# Bot meta info - displayed when browsing the bot healthcheck/public URL

PLATFORM=Webex
CODE=https://github.com/CiscoDevNet/botkit-template
#OWNER=
#SUPPORT=